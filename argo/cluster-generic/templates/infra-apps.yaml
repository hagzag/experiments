---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-external-secrets
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/external-secrets
    targetRevision: {{ .Values.infra_repo_ref }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-cert-manager
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/cert-manager
    targetRevision: {{ .Values.infra_repo_ref }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: cert-manager
  ignoreDifferences:
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    jsonPointers:
    - /status
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  # see: https://cert-manager.io/docs/installation/kubernetes/
  # syncOptions:
  #   - Validate=false
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-external-dns
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/external-dns
    targetRevision: {{ .Values.infra_repo_ref }}
    helm: |
      sources:
        # - crd
        - service
        - ingress
      provider: google
      google:
        ## Google Project to use
        ##
        project: "{{ .Values.gcp_project }}"
        ## Google Application Credentials
        ##
        serviceAccountSecret: "gcp-sa-secret"
        # serviceAccountKey: "external-dns"
        serviceAccountSecretKey: "key.json"
      resources:
        limits:
          cpu: 50m
          memory: 50Mi
        requests:
          memory: 50Mi
          cpu: 10m
      metrics:
        enabled: false
        namespace: monitoring
        serviceMonitor:
          enabled: false
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      policy: sync
      registry: "txt"
      txtOwnerId: {{ .Values.gcp_project }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-nfs-server-provisioner
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/nfs-server-provisioner
    targetRevision: {{ .Values.infra_repo_ref }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: data
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-elasticsearch
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/elasticsearch
    targetRevision: {{ .Values.infra_repo_ref }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: data
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-kibana
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/kibana
    targetRevision: {{ .Values.infra_repo_ref }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: data
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-fluentd
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/fluentd
    targetRevision: {{ .Values.infra_repo_ref }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: data
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argo_project }}-external-ingress
spec:
  project: {{ .Values.argo_project }}
  source:
    repoURL: {{ .Values.infra_repo_ssh_url }}
    path: .cd/bases/apps/external-ingress
    targetRevision: {{ .Values.infra_repo_ref }}
    helm:
      values: |
        controller:
          publishService:
            enabled: true
          service:
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ .Values.argo_project }}-external.{{ .Values.domain_suffix }}
  destination:
    server: {{ .Values.destination_cluster }}
    namespace: ingress
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

